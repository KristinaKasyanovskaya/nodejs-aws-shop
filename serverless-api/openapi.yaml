openapi: "3.0.1"
info:
  title: "Product Service API"
  description: "API for managing books available in our store."
  version: "1.0.0"

servers:
  - url: "https://es5ah7j82j.execute-api.us-east-1.amazonaws.com/dev"

paths:
  /products:
    get:
      summary: "Get all products"
      description: "Returns a list of all available books."
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              example:
                - id: "1"
                  title: "Book One"
                  description: "A thrilling mystery novel that keeps you on edge."
                  price: 29
                - id: "2"
                  title: "Book Two"
                  description: "A deep dive into the world of science and innovation."
                  price: 35
                - id: "3"
                  title: "Book Three"
                  description: "An emotional journey through love and loss."
                  price: 21

  /products/{productId}:
    get:
      summary: "Get product by ID"
      description: "Returns a single book by its ID."
      parameters:
        - name: "productId"
          in: "path"
          required: true
          description: "ID of the book."
          schema:
            type: "string"
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
              example:
                id: "1"
                title: "Book One"
                description: "A thrilling mystery novel that keeps you on edge."
                price: 29
        "404":
          description: "Product not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"

components:
  schemas:
    Product:
      type: "object"
      properties:
        id:
          type: "string"
        title:
          type: "string"
        description:
          type: "string"
        price:
          type: "number"
      example:
        id: "1"
        title: "Book One"
        description: "A thrilling mystery novel that keeps you on edge."
        price: 29
